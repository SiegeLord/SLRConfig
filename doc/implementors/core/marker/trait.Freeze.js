(function() {var implementors = {};
implementors["proc_macro2"] = [{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for TokenStream","synthetic":true,"types":[]},{"text":"impl Freeze for LexError","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for TokenTree","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Delimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Punct","synthetic":true,"types":[]},{"text":"impl Freeze for Spacing","synthetic":true,"types":[]},{"text":"impl Freeze for Ident","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UnitDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for BoolDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for IsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for CharDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for StrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for StringDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for CowStrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for BytesDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Freeze for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Freeze for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Freeze for Impossible&lt;Ok, Error&gt;","synthetic":true,"types":[]}];
implementors["slr_config"] = [{"text":"impl Freeze for ConfigElement","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigElementKind","synthetic":true,"types":[]}];
implementors["slr_parser"] = [{"text":"impl Freeze for StringQuoteType","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Freeze for Token&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for TokenKind&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for Source&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l, 's&gt; Freeze for Lexer&lt;'l, 's&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for ConfigString&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; Freeze for StringKind&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l, W&gt; Freeze for Printer&lt;'l, W&gt;","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Freeze for Underscore","synthetic":true,"types":[]},{"text":"impl Freeze for Abstract","synthetic":true,"types":[]},{"text":"impl Freeze for As","synthetic":true,"types":[]},{"text":"impl Freeze for Async","synthetic":true,"types":[]},{"text":"impl Freeze for Auto","synthetic":true,"types":[]},{"text":"impl Freeze for Await","synthetic":true,"types":[]},{"text":"impl Freeze for Become","synthetic":true,"types":[]},{"text":"impl Freeze for Box","synthetic":true,"types":[]},{"text":"impl Freeze for Break","synthetic":true,"types":[]},{"text":"impl Freeze for Const","synthetic":true,"types":[]},{"text":"impl Freeze for Continue","synthetic":true,"types":[]},{"text":"impl Freeze for Crate","synthetic":true,"types":[]},{"text":"impl Freeze for Default","synthetic":true,"types":[]},{"text":"impl Freeze for Do","synthetic":true,"types":[]},{"text":"impl Freeze for Dyn","synthetic":true,"types":[]},{"text":"impl Freeze for Else","synthetic":true,"types":[]},{"text":"impl Freeze for Enum","synthetic":true,"types":[]},{"text":"impl Freeze for Extern","synthetic":true,"types":[]},{"text":"impl Freeze for Final","synthetic":true,"types":[]},{"text":"impl Freeze for Fn","synthetic":true,"types":[]},{"text":"impl Freeze for For","synthetic":true,"types":[]},{"text":"impl Freeze for If","synthetic":true,"types":[]},{"text":"impl Freeze for Impl","synthetic":true,"types":[]},{"text":"impl Freeze for In","synthetic":true,"types":[]},{"text":"impl Freeze for Let","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]},{"text":"impl Freeze for Mod","synthetic":true,"types":[]},{"text":"impl Freeze for Move","synthetic":true,"types":[]},{"text":"impl Freeze for Mut","synthetic":true,"types":[]},{"text":"impl Freeze for Override","synthetic":true,"types":[]},{"text":"impl Freeze for Priv","synthetic":true,"types":[]},{"text":"impl Freeze for Pub","synthetic":true,"types":[]},{"text":"impl Freeze for Ref","synthetic":true,"types":[]},{"text":"impl Freeze for Return","synthetic":true,"types":[]},{"text":"impl Freeze for SelfType","synthetic":true,"types":[]},{"text":"impl Freeze for SelfValue","synthetic":true,"types":[]},{"text":"impl Freeze for Static","synthetic":true,"types":[]},{"text":"impl Freeze for Struct","synthetic":true,"types":[]},{"text":"impl Freeze for Super","synthetic":true,"types":[]},{"text":"impl Freeze for Trait","synthetic":true,"types":[]},{"text":"impl Freeze for Try","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Typeof","synthetic":true,"types":[]},{"text":"impl Freeze for Union","synthetic":true,"types":[]},{"text":"impl Freeze for Unsafe","synthetic":true,"types":[]},{"text":"impl Freeze for Unsized","synthetic":true,"types":[]},{"text":"impl Freeze for Use","synthetic":true,"types":[]},{"text":"impl Freeze for Virtual","synthetic":true,"types":[]},{"text":"impl Freeze for Where","synthetic":true,"types":[]},{"text":"impl Freeze for While","synthetic":true,"types":[]},{"text":"impl Freeze for Yield","synthetic":true,"types":[]},{"text":"impl Freeze for Add","synthetic":true,"types":[]},{"text":"impl Freeze for AddEq","synthetic":true,"types":[]},{"text":"impl Freeze for And","synthetic":true,"types":[]},{"text":"impl Freeze for AndAnd","synthetic":true,"types":[]},{"text":"impl Freeze for AndEq","synthetic":true,"types":[]},{"text":"impl Freeze for At","synthetic":true,"types":[]},{"text":"impl Freeze for Bang","synthetic":true,"types":[]},{"text":"impl Freeze for Caret","synthetic":true,"types":[]},{"text":"impl Freeze for CaretEq","synthetic":true,"types":[]},{"text":"impl Freeze for Colon","synthetic":true,"types":[]},{"text":"impl Freeze for Colon2","synthetic":true,"types":[]},{"text":"impl Freeze for Comma","synthetic":true,"types":[]},{"text":"impl Freeze for Div","synthetic":true,"types":[]},{"text":"impl Freeze for DivEq","synthetic":true,"types":[]},{"text":"impl Freeze for Dollar","synthetic":true,"types":[]},{"text":"impl Freeze for Dot","synthetic":true,"types":[]},{"text":"impl Freeze for Dot2","synthetic":true,"types":[]},{"text":"impl Freeze for Dot3","synthetic":true,"types":[]},{"text":"impl Freeze for DotDotEq","synthetic":true,"types":[]},{"text":"impl Freeze for Eq","synthetic":true,"types":[]},{"text":"impl Freeze for EqEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ge","synthetic":true,"types":[]},{"text":"impl Freeze for Gt","synthetic":true,"types":[]},{"text":"impl Freeze for Le","synthetic":true,"types":[]},{"text":"impl Freeze for Lt","synthetic":true,"types":[]},{"text":"impl Freeze for MulEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ne","synthetic":true,"types":[]},{"text":"impl Freeze for Or","synthetic":true,"types":[]},{"text":"impl Freeze for OrEq","synthetic":true,"types":[]},{"text":"impl Freeze for OrOr","synthetic":true,"types":[]},{"text":"impl Freeze for Pound","synthetic":true,"types":[]},{"text":"impl Freeze for Question","synthetic":true,"types":[]},{"text":"impl Freeze for RArrow","synthetic":true,"types":[]},{"text":"impl Freeze for LArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Rem","synthetic":true,"types":[]},{"text":"impl Freeze for RemEq","synthetic":true,"types":[]},{"text":"impl Freeze for FatArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Semi","synthetic":true,"types":[]},{"text":"impl Freeze for Shl","synthetic":true,"types":[]},{"text":"impl Freeze for ShlEq","synthetic":true,"types":[]},{"text":"impl Freeze for Shr","synthetic":true,"types":[]},{"text":"impl Freeze for ShrEq","synthetic":true,"types":[]},{"text":"impl Freeze for Star","synthetic":true,"types":[]},{"text":"impl Freeze for Sub","synthetic":true,"types":[]},{"text":"impl Freeze for SubEq","synthetic":true,"types":[]},{"text":"impl Freeze for Tilde","synthetic":true,"types":[]},{"text":"impl Freeze for Brace","synthetic":true,"types":[]},{"text":"impl Freeze for Bracket","synthetic":true,"types":[]},{"text":"impl Freeze for Paren","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for AttrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Meta","synthetic":true,"types":[]},{"text":"impl Freeze for MetaList","synthetic":true,"types":[]},{"text":"impl Freeze for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Freeze for NestedMeta","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for Fields","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for Visibility","synthetic":true,"types":[]},{"text":"impl Freeze for VisPublic","synthetic":true,"types":[]},{"text":"impl Freeze for VisCrate","synthetic":true,"types":[]},{"text":"impl Freeze for VisRestricted","synthetic":true,"types":[]},{"text":"impl Freeze for Expr","synthetic":true,"types":[]},{"text":"impl Freeze for ExprArray","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssign","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAsync","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAwait","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBinary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBox","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBreak","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCast","synthetic":true,"types":[]},{"text":"impl Freeze for ExprClosure","synthetic":true,"types":[]},{"text":"impl Freeze for ExprContinue","synthetic":true,"types":[]},{"text":"impl Freeze for ExprField","synthetic":true,"types":[]},{"text":"impl Freeze for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIf","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLet","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLit","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMatch","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprParen","synthetic":true,"types":[]},{"text":"impl Freeze for ExprPath","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRange","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReference","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReturn","synthetic":true,"types":[]},{"text":"impl Freeze for ExprStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTry","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTuple","synthetic":true,"types":[]},{"text":"impl Freeze for ExprType","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Freeze for ExprWhile","synthetic":true,"types":[]},{"text":"impl Freeze for ExprYield","synthetic":true,"types":[]},{"text":"impl Freeze for Member","synthetic":true,"types":[]},{"text":"impl Freeze for Index","synthetic":true,"types":[]},{"text":"impl Freeze for Generics","synthetic":true,"types":[]},{"text":"impl Freeze for GenericParam","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParam","synthetic":true,"types":[]},{"text":"impl Freeze for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Freeze for ConstParam","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBound","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Freeze for WhereClause","synthetic":true,"types":[]},{"text":"impl Freeze for WherePredicate","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateType","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateEq","synthetic":true,"types":[]},{"text":"impl Freeze for Lifetime","synthetic":true,"types":[]},{"text":"impl Freeze for Lit","synthetic":true,"types":[]},{"text":"impl Freeze for LitStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitByteStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitByte","synthetic":true,"types":[]},{"text":"impl Freeze for LitChar","synthetic":true,"types":[]},{"text":"impl Freeze for LitInt","synthetic":true,"types":[]},{"text":"impl Freeze for LitFloat","synthetic":true,"types":[]},{"text":"impl Freeze for LitBool","synthetic":true,"types":[]},{"text":"impl Freeze for StrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Freeze for DeriveInput","synthetic":true,"types":[]},{"text":"impl Freeze for Data","synthetic":true,"types":[]},{"text":"impl Freeze for DataStruct","synthetic":true,"types":[]},{"text":"impl Freeze for DataEnum","synthetic":true,"types":[]},{"text":"impl Freeze for DataUnion","synthetic":true,"types":[]},{"text":"impl Freeze for BinOp","synthetic":true,"types":[]},{"text":"impl Freeze for UnOp","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for TypeArray","synthetic":true,"types":[]},{"text":"impl Freeze for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Freeze for TypeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Freeze for TypeInfer","synthetic":true,"types":[]},{"text":"impl Freeze for TypeMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TypeNever","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParen","synthetic":true,"types":[]},{"text":"impl Freeze for TypePath","synthetic":true,"types":[]},{"text":"impl Freeze for TypePtr","synthetic":true,"types":[]},{"text":"impl Freeze for TypeReference","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSlice","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTuple","synthetic":true,"types":[]},{"text":"impl Freeze for Abi","synthetic":true,"types":[]},{"text":"impl Freeze for BareFnArg","synthetic":true,"types":[]},{"text":"impl Freeze for Variadic","synthetic":true,"types":[]},{"text":"impl Freeze for ReturnType","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for PathSegment","synthetic":true,"types":[]},{"text":"impl Freeze for PathArguments","synthetic":true,"types":[]},{"text":"impl Freeze for GenericArgument","synthetic":true,"types":[]},{"text":"impl Freeze for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Binding","synthetic":true,"types":[]},{"text":"impl Freeze for Constraint","synthetic":true,"types":[]},{"text":"impl Freeze for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for QSelf","synthetic":true,"types":[]},{"text":"impl Freeze for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Punctuated&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Freeze for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Nothing","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()