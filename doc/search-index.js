var searchIndex = {};

searchIndex['slr_config'] = {"items":[[0,"","slr_config","This crate implements the parsing for the SLRConfig format. Basic usage revolves\naround the creation and use of the `ConfigElement` type, like so:",null,null],[11,"new","slr_lexer","",0,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"string"}],"output":{"name":"error"}}],[11,"from_span","","Creates an error from a certain span of the source. The source argument,\nif set, must be set to the source that was used when the span was created.",0,{"inputs":[{"name":"error"},{"name":"span"},{"name":"option"},{"name":"errorkind"},{"name":"str"}],"output":{"name":"error"}}],[11,"clone","","",1,{"inputs":[{"name":"span"}],"output":{"name":"span"}}],[11,"fmt","","",1,{"inputs":[{"name":"span"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",1,{"inputs":[{"name":"span"}],"output":{"name":"span"}}],[11,"is_valid","","",1,{"inputs":[{"name":"span"}],"output":{"name":"bool"}}],[11,"combine","","",1,null],[11,"clone","","",2,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"fmt","","",2,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"tokenkind"}],"output":{"name":"tokenkind"}}],[11,"fmt","","",3,{"inputs":[{"name":"tokenkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"tokenkind"},{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"tokenkind"},{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"is_string","","",3,{"inputs":[{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"source"}],"output":{"name":"source"}}],[11,"new","","",4,{"inputs":[{"name":"source"},{"name":"path"},{"name":"str"}],"output":{"name":"source"}}],[11,"next","","",4,{"inputs":[{"name":"source"}],"output":{"name":"option"}}],[11,"eq","","",5,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"fmt","","",5,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new lexer from a source. The source will be reset by this\noperation, and must not be used with any spans created from a previous\nlexing done with that source.",6,{"inputs":[{"name":"lexer"},{"name":"source"}],"output":{"name":"lexer"}}],[11,"get_source","","",6,{"inputs":[{"name":"lexer"}],"output":{"name":"source"}}],[11,"next","","",6,{"inputs":[{"name":"lexer"}],"output":{"name":"option"}}],[3,"Error","slr_config","The error type used throughout this crate.",null,null],[12,"kind","","",0,null],[12,"text","","",0,null],[4,"ErrorKind","","An enum describing the kind of the error, to allow treating different\nerrors differenly.",null,null],[13,"ParseFailure","","A parse error has occured. This error is not recoverable.",5,null],[13,"InvalidRepr","","An object could not be parsed from its ConfigElement representation.\nThis error is recoverable, but the value the the object is in an\nunspecified state.",5,null],[13,"UnknownField","","While parsing a struct from a table, an unknown field was found. This\nerror is recoverable, and the struct is unaffected.",5,null],[13,"Custom","","A custom error available to 3rd party implementors. The semantics are\ndefined by the 3rd party.",5,null],[3,"Source","","Annotated representation of the configuration source string.",null,null],[3,"ConfigString","","",null,null],[12,"kind","","",7,null],[12,"span","","",7,null],[3,"Printer","","A utility type for printing a configuration element.",null,null],[3,"ConfigElement","","A configuration element.",null,null],[4,"StringKind","","",null,null],[13,"EscapedString","","",8,null],[13,"RawString","","",8,null],[4,"ConfigElementKind","","The kind of the configuration element.",null,null],[13,"Value","","A simple value, containing a string.",9,null],[13,"Table","","A table, which is a mapping of strings to configuration elements.",9,null],[13,"Array","","An array of configuration elements.",9,null],[5,"parse_source","","",null,{"inputs":[{"name":"source"},{"name":"v"}],"output":{"name":"result"}}],[11,"from_element","collections::string","",10,{"inputs":[{"name":"string"},{"name":"configelement"},{"name":"option"}],"output":{"name":"result"}}],[11,"to_element","","",10,{"inputs":[{"name":"string"}],"output":{"name":"configelement"}}],[11,"from_element","collections::vec","",11,{"inputs":[{"name":"vec"},{"name":"configelement"},{"name":"option"}],"output":{"name":"result"}}],[11,"to_element","","",11,{"inputs":[{"name":"vec"}],"output":{"name":"configelement"}}],[11,"fmt","slr_config","",7,{"inputs":[{"name":"configstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"configstring"}],"output":{"name":"configstring"}}],[11,"eq","","",8,{"inputs":[{"name":"stringkind"},{"name":"stringkind"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"stringkind"},{"name":"stringkind"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"stringkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"stringkind"}],"output":{"name":"stringkind"}}],[11,"append_to_string","","",7,{"inputs":[{"name":"configstring"},{"name":"string"}],"output":null}],[11,"to_string","","",7,{"inputs":[{"name":"configstring"}],"output":{"name":"string"}}],[11,"get_error","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"configelement"}}],[11,"clone","","",9,{"inputs":[{"name":"configelementkind"}],"output":{"name":"configelementkind"}}],[11,"new_table","","Creates a new empty table.",12,{"inputs":[{"name":"configelement"}],"output":{"name":"configelement"}}],[11,"new_value","","Creates a new value.",12,{"inputs":[{"name":"configelement"},{"name":"t"}],"output":{"name":"configelement"}}],[11,"new_array","","Creates a new array.",12,{"inputs":[{"name":"configelement"}],"output":{"name":"configelement"}}],[11,"from_source","","Parses a source and returns a table. The source will be reset by this\noperation, and must not be used with any spans created from a previous\nparsing done with that source.",12,{"inputs":[{"name":"configelement"},{"name":"source"}],"output":{"name":"result"}}],[11,"from_str","","Parses a source and returns a table.",12,{"inputs":[{"name":"configelement"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_source_with_init","","Updates the elements in this table with new values parsed from source.\nIf an error occurs, the contents of this table are undefined. The source\nwill be reset by this operation, and must not be used with any spans\ncreated from a previous lexing done with that source.",12,{"inputs":[{"name":"configelement"},{"name":"source"}],"output":{"name":"result"}}],[11,"from_str_with_init","","Updates the elements in this table with new values parsed from source.\nIf an error occurs, the contents of this table are undefined.",12,{"inputs":[{"name":"configelement"},{"name":"str"}],"output":{"name":"result"}}],[11,"kind","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"configelementkind"}}],[11,"span","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"span"}}],[11,"as_table","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"option"}}],[11,"as_table_mut","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"option"}}],[11,"as_value","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"option"}}],[11,"as_value_mut","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"option"}}],[11,"as_array","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"option"}}],[11,"as_array_mut","","",12,{"inputs":[{"name":"configelement"}],"output":{"name":"option"}}],[11,"insert","","Insert an element into a table or an array. Panics if self is a value.\n`name` is ignored if self is an array.",12,{"inputs":[{"name":"configelement"},{"name":"t"},{"name":"configelement"}],"output":null}],[11,"print","","",12,{"inputs":[{"name":"configelement"},{"name":"option"},{"name":"bool"},{"name":"printer"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"configelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",13,{"inputs":[{"name":"printer"},{"name":"w"}],"output":{"name":"printer"}}],[11,"value","","",13,{"inputs":[{"name":"printer"},{"name":"option"},{"name":"str"}],"output":{"name":"result"}}],[11,"start_array","","",13,{"inputs":[{"name":"printer"},{"name":"option"},{"name":"bool"}],"output":{"name":"result"}}],[11,"end_array","","",13,{"inputs":[{"name":"printer"}],"output":{"name":"result"}}],[11,"start_table","","",13,{"inputs":[{"name":"printer"},{"name":"option"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"end_table","","",13,{"inputs":[{"name":"printer"},{"name":"bool"}],"output":{"name":"result"}}],[8,"GetError","","",null,null],[10,"get_error","","",14,{"inputs":[{"name":"geterror"}],"output":{"name":"error"}}],[8,"Visitor","","",null,null],[10,"start_element","","",15,{"inputs":[{"name":"visitor"},{"name":"source"},{"name":"configstring"}],"output":{"name":"result"}}],[10,"end_element","","",15,{"inputs":[{"name":"visitor"}],"output":{"name":"result"}}],[10,"set_table","","",15,{"inputs":[{"name":"visitor"},{"name":"source"},{"name":"span"}],"output":{"name":"result"}}],[10,"set_array","","",15,{"inputs":[{"name":"visitor"},{"name":"source"},{"name":"span"}],"output":{"name":"result"}}],[10,"append_string","","",15,{"inputs":[{"name":"visitor"},{"name":"source"},{"name":"configstring"}],"output":{"name":"result"}}],[10,"expand","","",15,{"inputs":[{"name":"visitor"},{"name":"source"},{"name":"configstring"}],"output":{"name":"result"}}],[8,"ElementRepr","","Describes a way to convert a type to a ConfigElement and back.",null,null],[10,"from_element","","Updates the contents of `self` based on values in the element.",16,{"inputs":[{"name":"elementrepr"},{"name":"configelement"},{"name":"option"}],"output":{"name":"result"}}],[10,"to_element","","Creates an element that represents the contents of `self`.",16,{"inputs":[{"name":"elementrepr"}],"output":{"name":"configelement"}}],[14,"slr_def_struct_impl!","","",null,null],[14,"slr_def_enum_impl!","","",null,null],[14,"slr_def!","","",null,null]],"paths":[[3,"Error"],[3,"Span"],[3,"Token"],[4,"TokenKind"],[3,"Source"],[4,"ErrorKind"],[3,"Lexer"],[3,"ConfigString"],[4,"StringKind"],[4,"ConfigElementKind"],[3,"String"],[3,"Vec"],[3,"ConfigElement"],[3,"Printer"],[8,"GetError"],[8,"Visitor"],[8,"ElementRepr"]]};
searchIndex['slr_lexer'] = {"items":[[0,"","slr_lexer","",null,null],[3,"Span","","Type representing a certain sub-section of the source.",null,null],[3,"Token","","",null,null],[12,"kind","","",0,null],[12,"span","","",0,null],[3,"Source","","Annotated representation of the configuration source string.",null,null],[3,"Lexer","","A type handling the lexing.",null,null],[12,"cur_token","","",1,null],[12,"next_token","","",1,null],[3,"Error","","The error type used throughout this crate.",null,null],[12,"kind","","",2,null],[12,"text","","",2,null],[4,"StringQuoteType","","",null,null],[13,"Naked","","",3,null],[13,"Quoted","","",3,null],[4,"TokenKind","","",null,null],[13,"EscapedString","","",4,null],[13,"RawString","","",4,null],[13,"Assign","","",4,null],[13,"LeftBracket","","",4,null],[13,"RightBracket","","",4,null],[13,"LeftBrace","","",4,null],[13,"RightBrace","","",4,null],[13,"Dollar","","",4,null],[13,"Comma","","",4,null],[13,"Tilde","","",4,null],[13,"Eof","","",4,null],[4,"ErrorKind","","An enum describing the kind of the error, to allow treating different\nerrors differenly.",null,null],[13,"ParseFailure","","A parse error has occured. This error is not recoverable.",5,null],[13,"InvalidRepr","","An object could not be parsed from its ConfigElement representation.\nThis error is recoverable, but the value the the object is in an\nunspecified state.",5,null],[13,"UnknownField","","While parsing a struct from a table, an unknown field was found. This\nerror is recoverable, and the struct is unaffected.",5,null],[13,"Custom","","A custom error available to 3rd party implementors. The semantics are\ndefined by the 3rd party.",5,null],[5,"get_string_quote_type","","",null,{"inputs":[{"name":"str"}],"output":{"name":"stringquotetype"}}],[11,"clone","","",6,{"inputs":[{"name":"span"}],"output":{"name":"span"}}],[11,"fmt","","",6,{"inputs":[{"name":"span"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",6,{"inputs":[{"name":"span"}],"output":{"name":"span"}}],[11,"is_valid","","",6,{"inputs":[{"name":"span"}],"output":{"name":"bool"}}],[11,"combine","","",6,{"inputs":[{"name":"span"},{"name":"span"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"fmt","","",0,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"tokenkind"}],"output":{"name":"tokenkind"}}],[11,"fmt","","",4,{"inputs":[{"name":"tokenkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"tokenkind"},{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"tokenkind"},{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"is_string","","",4,{"inputs":[{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"source"}],"output":{"name":"source"}}],[11,"new","","",7,{"inputs":[{"name":"source"},{"name":"path"},{"name":"str"}],"output":{"name":"source"}}],[11,"next","","",7,{"inputs":[{"name":"source"}],"output":{"name":"option"}}],[11,"eq","","",5,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"fmt","","",5,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",2,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",2,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"string"}],"output":{"name":"error"}}],[11,"from_span","","Creates an error from a certain span of the source. The source argument,\nif set, must be set to the source that was used when the span was created.",2,{"inputs":[{"name":"error"},{"name":"span"},{"name":"option"},{"name":"errorkind"},{"name":"str"}],"output":{"name":"error"}}],[11,"new","","Creates a new lexer from a source. The source will be reset by this\noperation, and must not be used with any spans created from a previous\nlexing done with that source.",1,{"inputs":[{"name":"lexer"},{"name":"source"}],"output":{"name":"lexer"}}],[11,"get_source","","",1,{"inputs":[{"name":"lexer"}],"output":{"name":"source"}}],[11,"next","","",1,{"inputs":[{"name":"lexer"}],"output":{"name":"option"}}]],"paths":[[3,"Token"],[3,"Lexer"],[3,"Error"],[4,"StringQuoteType"],[4,"TokenKind"],[4,"ErrorKind"],[3,"Span"],[3,"Source"]]};
initSearch(searchIndex);
