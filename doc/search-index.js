var N = null;var searchIndex = {};

searchIndex["proc_macro2"]={"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`]…","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion…",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees…",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,N],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["self"],["span"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"into_iter","","",3,[[["self"]],["intoiter"]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"partial_cmp","","",7,[[["self"],["ident"]],["option",["ordering"]]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],["option",["tokentree"]]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["self"],["t"]],["bool"]]],[11,"clone","","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"cmp","","",7,[[["self"],["ident"]],["ordering"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_str","","",3,[[["str"]],["result",["tokenstream","lexerror"]]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",N,N],[10,"append","","",0,[[["self"],["u"]]]],[10,"append_all","","",0,[[["self"],["i"]]]],[10,"append_separated","","",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",0,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char","","The input contained a `char` that was not expected.",0,N],[13,"Str","","The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit","","The input contained a unit `()` that was not expected.",0,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,N],[13,"Seq","","The input contained a sequence that was not expected.",0,N],[13,"Map","","The input contained a map that was not expected.",0,N],[13,"Enum","","The input contained an enum that was not expected.",0,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,N],[13,"Other","","A message stating what uncategorized thing the input…",0,N],[0,"value","","Building blocks for deserializing basic values using the…",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"I128Deserializer","","A deserializer holding an `i128`.",N,N],[3,"U128Deserializer","","A deserializer holding a `u128`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,N],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[["self"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[["self"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",N,N],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value","","The type produced by using this seed.",10,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",N,N],[16,"Value","","The value produced by this visitor.",12,N],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["self"],["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["self"],["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["self"],["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["self"],["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",13,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",14,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",15,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,N],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",16,N],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",17,N],[10,"into_deserializer","","Convert this value into a deserializer.",17,N],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error","","Trait used by `Serialize` implementations to generically…",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,N],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,N],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,N],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,N],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,N],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,N],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,N],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[["self"]],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",N,N],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],["result",["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",30,N],[11,"deserialize_enum","","",30,N],[11,"deserialize_identifier","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",31,N],[11,"deserialize_enum","","",31,N],[11,"deserialize_identifier","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",32,N],[11,"deserialize_enum","","",32,N],[11,"deserialize_identifier","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",33,N],[11,"deserialize_enum","","",33,N],[11,"deserialize_identifier","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",34,N],[11,"deserialize_enum","","",34,N],[11,"deserialize_identifier","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",35,N],[11,"deserialize_enum","","",35,N],[11,"deserialize_identifier","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",36,N],[11,"deserialize_enum","","",36,N],[11,"deserialize_identifier","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",37,N],[11,"deserialize_enum","","",37,N],[11,"deserialize_identifier","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",38,N],[11,"deserialize_enum","","",38,N],[11,"deserialize_identifier","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",39,N],[11,"deserialize_enum","","",39,N],[11,"deserialize_identifier","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",40,N],[11,"deserialize_enum","","",40,N],[11,"deserialize_identifier","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",41,N],[11,"deserialize_enum","","",41,N],[11,"deserialize_identifier","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",42,N],[11,"deserialize_enum","","",42,N],[11,"deserialize_identifier","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",43,N],[11,"deserialize_enum","","",43,N],[11,"deserialize_identifier","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",44,N],[11,"deserialize_enum","","",44,N],[11,"deserialize_identifier","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",45,N],[11,"deserialize_enum","","",45,N],[11,"deserialize_identifier","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",46,N],[11,"deserialize_identifier","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",46,N],[11,"deserialize_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",47,N],[11,"deserialize_bool","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",47,N],[11,"deserialize_identifier","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",1,N],[11,"deserialize_bool","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",1,N],[11,"deserialize_identifier","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",48,N],[11,"deserialize_bool","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",48,N],[11,"deserialize_identifier","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",49,N],[11,"deserialize_bool","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",49,N],[11,"deserialize_identifier","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",2,N],[11,"deserialize_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",3,N],[11,"deserialize_enum","","",3,N],[11,"deserialize_identifier","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",5,N],[11,"deserialize_enum","","",5,N],[11,"deserialize_identifier","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",6,N],[11,"deserialize_enum","","",6,N],[11,"deserialize_identifier","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["self"],["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",28,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",28,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",28,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",28,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",28,[[["self"],["str"]],["result"]]],[11,"visit_none","","",28,[[["self"]],["result"]]],[11,"visit_some","","",28,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",28,[[["self"]],["result"]]],[11,"visit_seq","","",28,[[["self"],["a"]],["result"]]],[11,"visit_map","","",28,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",28,N],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",3,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"variant_seed","","",46,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",47,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",1,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",48,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",49,[[["self"],["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"default","serde::de","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"clone","serde::de::value","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde::de","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"paths":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[24,"Serialize","serde_derive","",N,N],[24,"Deserialize","","",N,N]],"paths":[]};
searchIndex["slr_config"]={"doc":"This crate implements the parsing for the SLRConfig…","items":[[3,"Error","slr_config","The error type used throughout this crate.",N,N],[12,"kind","","",0,N],[12,"text","","",0,N],[4,"ErrorKind","","An enum describing the kind of the error, to allow…",N,N],[13,"ParseFailure","","A parse error has occured. This error is not recoverable.",1,N],[13,"InvalidRepr","","An object could not be parsed from its ConfigElement…",1,N],[13,"UnknownField","","While parsing a struct from a table, an unknown field was…",1,N],[13,"Custom","","A custom error available to 3rd party implementors. The…",1,N],[3,"Source","","Annotated representation of the configuration source string.",N,N],[3,"ConfigElement","","A configuration element.",N,N],[4,"ConfigElementKind","","The kind of the configuration element.",N,N],[13,"Value","","A simple value, containing a string.",2,N],[13,"Table","","A table, which is a mapping of strings to configuration…",2,N],[13,"Array","","An array of configuration elements.",2,N],[5,"to_element","","Serialize a value to a ConfigElement.",N,[[["t"]],["result",["configelement","error"]]]],[5,"from_element","","Deserialize a value to a ConfigElement.",N,[[["configelement"],["option",["source"]]],["result",["error"]]]],[11,"new_table","","Creates a new empty table.",3,[[],["configelement"]]],[11,"new_value","","Creates a new value.",3,[[["t"]],["configelement"]]],[11,"new_array","","Creates a new array.",3,[[],["configelement"]]],[11,"from_source","","Parses a source and returns a table. The source will be…",3,[[["source"]],["result",["configelement","error"]]]],[11,"from_str","","Parses a source and returns a table.",3,[[["str"]],["result",["configelement","error"]]]],[11,"from_source_with_init","","Updates the elements in this table with new values parsed…",3,[[["self"],["source"]],["result",["error"]]]],[11,"from_str_with_init","","Updates the elements in this table with new values parsed…",3,[[["self"],["str"]],["result",["error"]]]],[11,"kind","","Returns the kind of this element.",3,[[["self"]],["configelementkind"]]],[11,"kind_mut","","Returns the kind of this element.",3,[[["self"]],["configelementkind"]]],[11,"span","","Returns the span associated with this element.",3,[[["self"]],["span"]]],[11,"as_table","","If this is a table, returns a pointer to its contents.",3,[[["self"]],["option",["btreemap"]]]],[11,"into_table","","If this is a table, returns its contents.",3,[[["self"]],["option",["btreemap"]]]],[11,"as_table_mut","","If this is a table, returns a pointer to its contents.",3,[[["self"]],["option",["btreemap"]]]],[11,"as_value","","If this is a value, returns a pointer to its contents.",3,[[["self"]],["option",["string"]]]],[11,"into_value","","If this is a value, returns its contents.",3,[[["self"]],["option",["string"]]]],[11,"as_value_mut","","If this is a value, returns a pointer to its contents.",3,[[["self"]],["option",["string"]]]],[11,"as_array","","If this is an array, returns a pointer to its contents.",3,[[["self"]],["option",["vec"]]]],[11,"into_array","","If this is an array, returns its contents.",3,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","If this is an array, returns a pointer to its contents.",3,[[["self"]],["option",["vec"]]]],[11,"insert","","Insert an element into a table or an array. Panics if self…",3,[[["self"],["t"],["configelement"]]]],[11,"print","","Outputs the string representation of this element into…",3,[[["self"],["option",["str"]],["bool"],["printer"]],["result",["error"]]]],[8,"ElementRepr","","Describes a way to convert a type to a ConfigElement and…",N,N],[10,"from_element","","Updates the contents of `self` based on values in the…",4,[[["self"],["configelement"],["option",["source"]]],["result",["vec"]]]],[10,"to_element","","Creates an element that represents the contents of `self`.",4,[[["self"]],["configelement"]]],[14,"slr_def","","A macro to define the compile-time schemas for…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"custom","","",0,[[["t"]],["error"]]],[11,"custom","","",0,[[["t"]],["error"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"clone","","",5,[[["self"]],["source"]]],[11,"next","","",5,[[["self"]],["option",["char"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",1,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",1,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"get_error","","",0,[[["self"]],["error"]]],[11,"clone","","",3,[[["self"]],["configelement"]]],[11,"clone","","",2,[[["self"]],["configelementkind"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"new","","",0,[[["errorkind"],["string"]],["error"]]],[11,"from_span","","Creates an error from a certain span of the source. The…",0,[[["span"],["option",["source"]],["errorkind"],["str"]],["error"]]],[11,"new","","",5,[[["path"],["str"]],["source"]]]],"paths":[[3,"Error"],[4,"ErrorKind"],[4,"ConfigElementKind"],[3,"ConfigElement"],[8,"ElementRepr"],[3,"Source"]]};
searchIndex["slr_parser"]={"doc":"","items":[[3,"Span","slr_parser","Type representing a certain sub-section of the source.",N,N],[3,"Token","","",N,N],[12,"kind","","",0,N],[12,"span","","",0,N],[3,"Source","","Annotated representation of the configuration source string.",N,N],[3,"Lexer","","A type handling the lexing.",N,N],[12,"cur_token","","",1,N],[12,"next_token","","",1,N],[3,"Error","","The error type used throughout this crate.",N,N],[12,"kind","","",2,N],[12,"text","","",2,N],[3,"ConfigString","","",N,N],[12,"kind","","",3,N],[12,"span","","",3,N],[3,"Printer","","A utility type for printing a configuration element.",N,N],[4,"StringQuoteType","","",N,N],[13,"Naked","","",4,N],[13,"Quoted","","",4,N],[4,"TokenKind","","",N,N],[13,"EscapedString","","",5,N],[13,"RawString","","",5,N],[13,"Assign","","",5,N],[13,"LeftBracket","","",5,N],[13,"RightBracket","","",5,N],[13,"LeftBrace","","",5,N],[13,"RightBrace","","",5,N],[13,"Dollar","","",5,N],[13,"Comma","","",5,N],[13,"Tilde","","",5,N],[13,"Eof","","",5,N],[4,"ErrorKind","","An enum describing the kind of the error, to allow…",N,N],[13,"ParseFailure","","A parse error has occured. This error is not recoverable.",6,N],[13,"InvalidRepr","","An object could not be parsed from its ConfigElement…",6,N],[13,"UnknownField","","While parsing a struct from a table, an unknown field was…",6,N],[13,"Custom","","A custom error available to 3rd party implementors. The…",6,N],[4,"StringKind","","",N,N],[13,"EscapedString","","",7,N],[13,"RawString","","",7,N],[5,"get_string_quote_type","","",N,[[["str"]],["stringquotetype"]]],[5,"parse_source","","",N,[[["source"],["v"]],["result",["error"]]]],[11,"new","","",8,[[],["span"]]],[11,"is_valid","","",8,[[["self"]],["bool"]]],[11,"combine","","",8,[[["self"],["span"]]]],[11,"is_string","","",5,[[["self"]],["bool"]]],[11,"new","","",9,[[["path"],["str"]],["source"]]],[11,"new","","",2,[[["errorkind"],["string"]],["error"]]],[11,"from_span","","Creates an error from a certain span of the source. The…",2,[[["span"],["option",["source"]],["errorkind"],["str"]],["error"]]],[11,"new","","Creates a new lexer from a source. The source will be…",1,[[["source"]],["lexer"]]],[11,"get_source","","",1,[[["self"]],["source"]]],[11,"next","","",1,[[["self"]],["option",["result"]]]],[11,"append_to_string","","",3,[[["self"],["string"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"new","","",10,[[["w"]],["printer"]]],[11,"value","","",10,[[["self"],["option",["str"]],["str"]],["result",["error"]]]],[11,"start_array","","",10,[[["self"],["option",["str"]],["bool"]],["result",["error"]]]],[11,"end_array","","",10,[[["self"]],["result",["error"]]]],[11,"start_table","","",10,[[["self"],["option",["str"]],["bool"],["bool"]],["result",["error"]]]],[11,"end_table","","",10,[[["self"],["bool"]],["result",["error"]]]],[8,"GetError","","",N,N],[10,"get_error","","",11,[[["self"]],["error"]]],[8,"Visitor","","",N,N],[10,"start_element","","",12,[[["self"],["source"],["configstring"]],["result"]]],[10,"end_element","","",12,[[["self"]],["result"]]],[10,"set_table","","",12,[[["self"],["source"],["span"]],["result"]]],[10,"set_array","","",12,[[["self"],["source"],["span"]],["result"]]],[10,"append_string","","",12,[[["self"],["source"],["configstring"]],["result"]]],[10,"expand","","",12,[[["self"],["source"],["configstring"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"get_error","","",2,[[["self"]],["error"]]],[11,"next","","",9,[[["self"]],["option",["char"]]]],[11,"eq","","",5,[[["self"],["tokenkind"]],["bool"]]],[11,"ne","","",5,[[["self"],["tokenkind"]],["bool"]]],[11,"eq","","",6,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",6,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",7,[[["self"],["stringkind"]],["bool"]]],[11,"ne","","",7,[[["self"],["stringkind"]],["bool"]]],[11,"clone","","",8,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["token"]]],[11,"clone","","",5,[[["self"]],["tokenkind"]]],[11,"clone","","",9,[[["self"]],["source"]]],[11,"clone","","",6,[[["self"]],["errorkind"]]],[11,"clone","","",2,[[["self"]],["error"]]],[11,"clone","","",3,[[["self"]],["configstring"]]],[11,"clone","","",7,[[["self"]],["stringkind"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"custom","","",2,[[["t"]],["self"]]],[11,"custom","","",2,[[["t"]],["self"]]]],"paths":[[3,"Token"],[3,"Lexer"],[3,"Error"],[3,"ConfigString"],[4,"StringQuoteType"],[4,"TokenKind"],[4,"ErrorKind"],[4,"StringKind"],[3,"Span"],[3,"Source"],[3,"Printer"],[8,"GetError"],[8,"Visitor"]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",10,N],[12,"left","","",10,N],[12,"op","","",10,N],[12,"right","","",10,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",N,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",11,N],[12,"func","","",11,N],[12,"paren_token","","",11,N],[12,"args","","",11,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",12,N],[12,"expr","","",12,N],[12,"as_token","","",12,N],[12,"ty","","",12,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",N,N],[12,"attrs","","",13,N],[12,"base","","",13,N],[12,"dot_token","","",13,N],[12,"member","","",13,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",N,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",14,N],[12,"expr","","",14,N],[12,"bracket_token","","",14,N],[12,"index","","",14,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",15,N],[12,"lit","","",15,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",N,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",16,N],[12,"paren_token","","",16,N],[12,"expr","","",16,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",N,N],[12,"attrs","","",17,N],[12,"qself","","",17,N],[12,"path","","",17,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",N,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",18,N],[12,"op","","",18,N],[12,"expr","","",18,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",19,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",20,N],[12,"span","","",20,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",21,N],[12,"lt_token","","",21,N],[12,"lifetimes","","",21,N],[12,"gt_token","","",21,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",22,N],[12,"const_token","","",22,N],[12,"ident","","",22,N],[12,"colon_token","","",22,N],[12,"ty","","",22,N],[12,"eq_token","","",22,N],[12,"default","","",22,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token","","",23,N],[12,"params","","",23,N],[12,"gt_token","","",23,N],[12,"where_clause","","",23,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",24,N],[12,"lifetime","","",24,N],[12,"colon_token","","",24,N],[12,"bounds","","",24,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",25,N],[12,"eq_token","","",25,N],[12,"rhs_ty","","",25,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",26,N],[12,"colon_token","","",26,N],[12,"bounds","","",26,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",27,N],[12,"bounded_ty","","The type being bounded",27,N],[12,"colon_token","","",27,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",28,N],[12,"modifier","","",28,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",29,N],[12,"ident","","",29,N],[12,"colon_token","","",29,N],[12,"bounds","","",29,N],[12,"eq_token","","",29,N],[12,"default","","",29,N],[3,"WhereClause","","A `where` clause in a definition: `where T:…",N,N],[12,"where_token","","",30,N],[12,"predicates","","",30,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",31,N],[12,"ident","","",31,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",32,N],[12,"span","","",32,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",N,N],[12,"token","","",33,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",34,N],[12,"bang_token","","",34,N],[12,"delimiter","","",34,N],[12,"tts","","",34,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",35,N],[12,"brace_token","","",35,N],[12,"variants","","",35,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",36,N],[12,"fields","","",36,N],[12,"semi_token","","",36,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",37,N],[12,"fields","","",37,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,N],[12,"vis","","Visibility of the struct or enum.",38,N],[12,"ident","","Name of the struct or enum.",38,N],[12,"generics","","Generics required to complete the definition.",38,N],[12,"data","","Data within the struct or enum.",38,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",39,N],[12,"name","","",39,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name","","",40,N],[12,"ty","","",40,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",41,N],[12,"elem","","",41,N],[12,"semi_token","","",41,N],[12,"len","","",41,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",42,N],[12,"unsafety","","",42,N],[12,"abi","","",42,N],[12,"fn_token","","",42,N],[12,"paren_token","","",42,N],[12,"inputs","","",42,N],[12,"variadic","","",42,N],[12,"output","","",42,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",43,N],[12,"elem","","",43,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",N,N],[12,"impl_token","","",44,N],[12,"bounds","","",44,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",N,N],[12,"underscore_token","","",45,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",46,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",47,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",48,N],[12,"elem","","",48,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",N,N],[12,"qself","","",49,N],[12,"path","","",49,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",50,N],[12,"const_token","","",50,N],[12,"mutability","","",50,N],[12,"elem","","",50,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",51,N],[12,"lifetime","","",51,N],[12,"mutability","","",51,N],[12,"elem","","",51,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",52,N],[12,"elem","","",52,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",N,N],[12,"dyn_token","","",53,N],[12,"bounds","","",53,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",54,N],[12,"elems","","",54,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",55,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token","","",56,N],[12,"lt_token","","",56,N],[12,"args","","",56,N],[12,"gt_token","","",56,N],[3,"Binding","","A binding (equality constraint) on an associated type:…",N,N],[12,"ident","","",57,N],[12,"eq_token","","",57,N],[12,"ty","","",57,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",58,N],[12,"colon_token","","",58,N],[12,"bounds","","",58,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,"paren_token","","",59,N],[12,"inputs","","`(A, B)`",59,N],[12,"output","","`C`",59,N],[3,"Path","","A path at which a named item is exported:…",N,N],[12,"leading_colon","","",60,N],[12,"segments","","",60,N],[3,"PathSegment","","A segment of a path together with any path arguments on…",N,N],[12,"ident","","",61,N],[12,"arguments","","",61,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token","","",62,N],[12,"ty","","",62,N],[12,"position","","",62,N],[12,"as_token","","",62,N],[12,"gt_token","","",62,N],[3,"Error","","Error returned when a Syn parser cannot parse the input…",N,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer","","",63,N],[13,"Inner","","",63,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",64,N],[13,"List","","A structured list within an attribute, like `derive(Copy,…",64,N],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",64,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in…",65,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",65,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point…",66,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",66,N],[13,"Unit","","Unit struct or unit variant such as `None`.",66,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public","","A public visibility level: `pub`.",67,N],[13,"Crate","","A crate-level visibility: `crate`.",67,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",67,N],[13,"Inherited","","An inherited visibility, which usually means private.",67,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",68,N],[13,"InPlace","","A placement expression: `place <- value`.",68,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,N],[13,"Call","","A function call expression: `invoke(a, b)`.",68,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,N],[13,"Unary","","A unary operation: `!x`, `*x`.",68,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,N],[13,"Cast","","A cast expression: `foo as f64`.",68,N],[13,"Type","","A type ascription expression: `foo: f64`.",68,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",68,N],[13,"If","","An `if` expression with an optional `else` block: `if expr…",68,N],[13,"While","","A while loop: `while expr { ... }`.",68,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",68,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,N],[13,"Block","","A blocked scope: `{ ... }`.",68,N],[13,"Assign","","An assignment expression: `a = compute()`.",68,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",68,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,N],[13,"Path","","A path like `std::mem::replace` possibly containing…",68,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,N],[13,"Break","","A `break`, with an optional label to break and an optional…",68,N],[13,"Continue","","A `continue`, with an optional label.",68,N],[13,"Return","","A `return`, with an optional value to be returned.",68,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,N],[13,"Repeat","","An array literal constructed from one repeated element:…",68,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,N],[13,"Group","","An expression contained within invisible delimiters.",68,N],[13,"Try","","A try-expression: `expr?`.",68,N],[13,"Async","","An async block: `async { ... }`.",68,N],[13,"TryBlock","","A try block: `try { ... }`.",68,N],[13,"Yield","","A yield expression: `yield expr`.",68,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,N],[4,"Member","","A struct or tuple struct field accessed in a struct…",N,N],[13,"Named","","A named field like `self.x`.",69,N],[13,"Unnamed","","An unnamed field like `self.0`.",69,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",N,N],[13,"None","","",71,N],[13,"Maybe","","",71,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",72,N],[13,"Lifetime","","",72,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",73,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",N,N],[13,"F32","","",74,N],[13,"F64","","",74,N],[13,"None","","",74,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8","","",75,N],[13,"I16","","",75,N],[13,"I32","","",75,N],[13,"I64","","",75,N],[13,"I128","","",75,N],[13,"Isize","","",75,N],[13,"U8","","",75,N],[13,"U16","","",75,N],[13,"U32","","",75,N],[13,"U64","","",75,N],[13,"U128","","",75,N],[13,"Usize","","",75,N],[13,"None","","",75,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,N],[13,"Byte","","A byte literal: `b'f'`.",76,N],[13,"Char","","A character literal: `'a'`.",76,N],[13,"Int","","An integer literal: `1` or `1u16`.",76,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,N],[13,"Bool","","A boolean literal: `true` or `false`.",76,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",76,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",77,N],[13,"Raw","","A raw string like `r##\"data\"##`.",77,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren","","",78,N],[13,"Brace","","",78,N],[13,"Bracket","","",78,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",80,N],[13,"Sub","","The `-` operator (subtraction)",80,N],[13,"Mul","","The `*` operator (multiplication)",80,N],[13,"Div","","The `/` operator (division)",80,N],[13,"Rem","","The `%` operator (modulus)",80,N],[13,"And","","The `&&` operator (logical and)",80,N],[13,"Or","","The `||` operator (logical or)",80,N],[13,"BitXor","","The `^` operator (bitwise xor)",80,N],[13,"BitAnd","","The `&` operator (bitwise and)",80,N],[13,"BitOr","","The `|` operator (bitwise or)",80,N],[13,"Shl","","The `<<` operator (shift left)",80,N],[13,"Shr","","The `>>` operator (shift right)",80,N],[13,"Eq","","The `==` operator (equality)",80,N],[13,"Lt","","The `<` operator (less than)",80,N],[13,"Le","","The `<=` operator (less than or equal to)",80,N],[13,"Ne","","The `!=` operator (not equal to)",80,N],[13,"Ge","","The `>=` operator (greater than or equal to)",80,N],[13,"Gt","","The `>` operator (greater than)",80,N],[13,"AddEq","","The `+=` operator",80,N],[13,"SubEq","","The `-=` operator",80,N],[13,"MulEq","","The `*=` operator",80,N],[13,"DivEq","","The `/=` operator",80,N],[13,"RemEq","","The `%=` operator",80,N],[13,"BitXorEq","","The `^=` operator",80,N],[13,"BitAndEq","","The `&=` operator",80,N],[13,"BitOrEq","","The `|=` operator",80,N],[13,"ShlEq","","The `<<=` operator",80,N],[13,"ShrEq","","The `>>=` operator",80,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",81,N],[13,"Not","","The `!` operator for logical inversion",81,N],[13,"Neg","","The `-` operator for negation",81,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named","","Argument given a name.",82,N],[13,"Wild","","Argument not given a name, matched with `_`.",82,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",83,N],[13,"Type","","A particular type is returned.",83,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,N],[13,"Array","","A fixed size array type: `[T; n]`.",84,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,N],[13,"Never","","The never type: `!`.",84,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",84,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",84,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",84,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,N],[13,"Group","","A type contained within invisible delimiters.",84,N],[13,"Infer","","Indication that a type should be inferred by the compiler:…",84,N],[13,"Macro","","A macro in the type position.",84,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime","","A lifetime argument.",85,N],[13,"Type","","A type argument.",85,N],[13,"Binding","","A binding (equality constraint) on an associated type: the…",85,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",85,N],[13,"Const","","A const expression. Must be inside of a block.",85,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None","","",86,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",N,[[["tokenstream"]],["result"]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",N,[[["tokenstream"]],["result"]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",N,[[["str"]],["result"]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",87,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",88,N],[3,"As","","`as`",N,N],[12,"span","","",89,N],[3,"Async","","`async`",N,N],[12,"span","","",90,N],[3,"Auto","","`auto`",N,N],[12,"span","","",91,N],[3,"Become","","`become`",N,N],[12,"span","","",92,N],[3,"Box","","`box`",N,N],[12,"span","","",93,N],[3,"Break","","`break`",N,N],[12,"span","","",94,N],[3,"Const","","`const`",N,N],[12,"span","","",95,N],[3,"Continue","","`continue`",N,N],[12,"span","","",96,N],[3,"Crate","","`crate`",N,N],[12,"span","","",97,N],[3,"Default","","`default`",N,N],[12,"span","","",98,N],[3,"Do","","`do`",N,N],[12,"span","","",99,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",100,N],[3,"Else","","`else`",N,N],[12,"span","","",101,N],[3,"Enum","","`enum`",N,N],[12,"span","","",102,N],[3,"Existential","","`existential`",N,N],[12,"span","","",103,N],[3,"Extern","","`extern`",N,N],[12,"span","","",104,N],[3,"Final","","`final`",N,N],[12,"span","","",105,N],[3,"Fn","","`fn`",N,N],[12,"span","","",106,N],[3,"For","","`for`",N,N],[12,"span","","",107,N],[3,"If","","`if`",N,N],[12,"span","","",108,N],[3,"Impl","","`impl`",N,N],[12,"span","","",109,N],[3,"In","","`in`",N,N],[12,"span","","",110,N],[3,"Let","","`let`",N,N],[12,"span","","",111,N],[3,"Loop","","`loop`",N,N],[12,"span","","",112,N],[3,"Macro","","`macro`",N,N],[12,"span","","",113,N],[3,"Match","","`match`",N,N],[12,"span","","",114,N],[3,"Mod","","`mod`",N,N],[12,"span","","",115,N],[3,"Move","","`move`",N,N],[12,"span","","",116,N],[3,"Mut","","`mut`",N,N],[12,"span","","",117,N],[3,"Override","","`override`",N,N],[12,"span","","",118,N],[3,"Priv","","`priv`",N,N],[12,"span","","",119,N],[3,"Pub","","`pub`",N,N],[12,"span","","",120,N],[3,"Ref","","`ref`",N,N],[12,"span","","",121,N],[3,"Return","","`return`",N,N],[12,"span","","",122,N],[3,"SelfType","","`Self`",N,N],[12,"span","","",123,N],[3,"SelfValue","","`self`",N,N],[12,"span","","",124,N],[3,"Static","","`static`",N,N],[12,"span","","",125,N],[3,"Struct","","`struct`",N,N],[12,"span","","",126,N],[3,"Super","","`super`",N,N],[12,"span","","",127,N],[3,"Trait","","`trait`",N,N],[12,"span","","",128,N],[3,"Try","","`try`",N,N],[12,"span","","",129,N],[3,"Type","","`type`",N,N],[12,"span","","",130,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",131,N],[3,"Union","","`union`",N,N],[12,"span","","",132,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",133,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",134,N],[3,"Use","","`use`",N,N],[12,"span","","",135,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",136,N],[3,"Where","","`where`",N,N],[12,"span","","",137,N],[3,"While","","`while`",N,N],[12,"span","","",138,N],[3,"Yield","","`yield`",N,N],[12,"span","","",139,N],[3,"Add","","`+`",N,N],[12,"spans","","",140,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",141,N],[3,"And","","`&`",N,N],[12,"spans","","",142,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",143,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",144,N],[3,"At","","`@`",N,N],[12,"spans","","",145,N],[3,"Bang","","`!`",N,N],[12,"spans","","",146,N],[3,"Caret","","`^`",N,N],[12,"spans","","",147,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",148,N],[3,"Colon","","`:`",N,N],[12,"spans","","",149,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",150,N],[3,"Comma","","`,`",N,N],[12,"spans","","",151,N],[3,"Div","","`/`",N,N],[12,"spans","","",152,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",153,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",154,N],[3,"Dot","","`.`",N,N],[12,"spans","","",155,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",156,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",157,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",158,N],[3,"Eq","","`=`",N,N],[12,"spans","","",159,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",160,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",161,N],[3,"Gt","","`>`",N,N],[12,"spans","","",162,N],[3,"Le","","`<=`",N,N],[12,"spans","","",163,N],[3,"Lt","","`<`",N,N],[12,"spans","","",164,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",165,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",166,N],[3,"Or","","`|`",N,N],[12,"spans","","",167,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",168,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",169,N],[3,"Pound","","`#`",N,N],[12,"spans","","",170,N],[3,"Question","","`?`",N,N],[12,"spans","","",171,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",172,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",173,N],[3,"Rem","","`%`",N,N],[12,"spans","","",174,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",175,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",176,N],[3,"Semi","","`;`",N,N],[12,"spans","","",177,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",178,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",179,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",180,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",181,N],[3,"Star","","`*`",N,N],[12,"spans","","",182,N],[3,"Sub","","`-`",N,N],[12,"spans","","",183,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",184,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",185,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",186,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",187,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",188,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",189,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"surround","","",186,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",187,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",188,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",189,[[["self"],["tokenstream"],["f"]]]],[11,"parse_meta","syn","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"name","","Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],["itermut",["field"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",23,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",23,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],["turbofish"]]],[11,"new","","",24,[[["lifetime"]],["self"]]],[11,"new","","Panics",31,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,[[["literal"]],["self"]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"value","","",191,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",191,[[["self"]],["result",["error"]]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"new","","",192,N],[11,"value","","",192,[[["self"]],["vec",["u8"]]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"set_span","","",192,[[["self"],["span"]]]],[11,"new","","",193,[[["u8"],["span"]],["self"]]],[11,"value","","",193,[[["self"]],["u8"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"set_span","","",193,[[["self"],["span"]]]],[11,"new","","",194,[[["char"],["span"]],["self"]]],[11,"value","","",194,[[["self"]],["char"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"set_span","","",194,[[["self"],["span"]]]],[11,"new","","",195,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",195,[[["self"]],["u64"]]],[11,"suffix","","",195,[[["self"]],["intsuffix"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"set_span","","",195,[[["self"],["span"]]]],[11,"new","","",196,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",196,[[["self"]],["f64"]]],[11,"suffix","","",196,[[["self"]],["floatsuffix"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"set_span","","",196,[[["self"],["span"]]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"set_span","","",33,[[["self"],["span"]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",84,[[["parsestream"]],["result"]]],[11,"without_plus","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",60,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",60,[[["self"],["i"]],["bool"]]],[11,"is_empty","","",86,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",198,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",198,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",198,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",198,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",198,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",198,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",198,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",198,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",198,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",199,[[["parsestream"]],["result"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its…",N,N],[13,"Punctuated","","",200,N],[13,"End","","",200,N],[11,"new","","Creates an empty punctuated sequence.",201,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",201,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",201,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",201,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",201,N],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",200,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",200,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",200,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",N,N],[10,"span","","Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint","","",N,[[["v"],["constraint"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[11,"visit_abi","","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be…",N,N],[10,"parse","","",204,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output","","",205,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",205,[[["self"],["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",206,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",207,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree…",207,N],[11,"peek","","Looks at the next token in the parse stream to determine…",207,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",207,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",207,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",207,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",207,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",207,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",207,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",207,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",208,[[["span"],["t"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",208,[[["t"],["u"]],["self"]]],[11,"span","","The source location of the error.",208,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",208,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",N,N],[6,"Result","","The result of a Syn parser.",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",N,N],[14,"braced","","Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to…",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",N,N],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"to_string","","",209,[[["self"]],["string"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"to_string","","",208,[[["self"]],["string"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into_iter","","",201,[[["self"]],["i"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into_iter","","",242,[[["self"]],["i"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into_iter","","",243,[[["self"]],["i"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into_iter","","",244,[[["self"]],["i"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into_iter","","",245,[[["self"]],["i"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into_iter","","",246,[[["self"]],["i"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into_iter","","",247,[[["self"]],["i"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"from","syn::parse","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"to_string","","",207,[[["self"]],["string"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"partial_cmp","syn","",209,[[["self"],["ident"]],["option",["ordering"]]]],[11,"hash","","",209,N],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",209,[[["self"]],["ident"]]],[11,"cmp","","",209,[[["self"],["ident"]],["ordering"]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",209,[[["self"],["ident"]],["bool"]]],[11,"eq","","",209,[[["self"],["t"]],["bool"]]],[11,"to_tokens","","",209,N],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","syn","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"parse_any","","",209,[[["parsestream"]],["result"]]],[11,"parse","syn::token","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","syn","",209,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",60,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"from","","",209,[[["selfvalue"]],["ident"]]],[11,"from","","",209,[[["selftype"]],["ident"]]],[11,"from","","",209,[[["super"]],["ident"]]],[11,"from","","",209,[[["crate"]],["ident"]]],[11,"from","","",209,[[["extern"]],["ident"]]],[11,"from","","",209,[[["underscore"]],["ident"]]],[11,"from","","",64,[[["ident"]],["meta"]]],[11,"from","","",64,[[["metalist"]],["meta"]]],[11,"from","","",64,[[["metanamevalue"]],["meta"]]],[11,"from","","",65,[[["meta"]],["nestedmeta"]]],[11,"from","","",65,[[["lit"]],["nestedmeta"]]],[11,"from","","",66,[[["fieldsnamed"]],["fields"]]],[11,"from","","",66,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",67,[[["vispublic"]],["visibility"]]],[11,"from","","",67,[[["viscrate"]],["visibility"]]],[11,"from","","",67,[[["visrestricted"]],["visibility"]]],[11,"from","","",68,[[["exprbox"]],["expr"]]],[11,"from","","",68,[[["exprinplace"]],["expr"]]],[11,"from","","",68,[[["exprarray"]],["expr"]]],[11,"from","","",68,[[["exprcall"]],["expr"]]],[11,"from","","",68,[[["exprmethodcall"]],["expr"]]],[11,"from","","",68,[[["exprtuple"]],["expr"]]],[11,"from","","",68,[[["exprbinary"]],["expr"]]],[11,"from","","",68,[[["exprunary"]],["expr"]]],[11,"from","","",68,[[["exprlit"]],["expr"]]],[11,"from","","",68,[[["exprcast"]],["expr"]]],[11,"from","","",68,[[["exprtype"]],["expr"]]],[11,"from","","",68,[[["exprlet"]],["expr"]]],[11,"from","","",68,[[["exprif"]],["expr"]]],[11,"from","","",68,[[["exprwhile"]],["expr"]]],[11,"from","","",68,[[["exprforloop"]],["expr"]]],[11,"from","","",68,[[["exprloop"]],["expr"]]],[11,"from","","",68,[[["exprmatch"]],["expr"]]],[11,"from","","",68,[[["exprclosure"]],["expr"]]],[11,"from","","",68,[[["exprunsafe"]],["expr"]]],[11,"from","","",68,[[["exprblock"]],["expr"]]],[11,"from","","",68,[[["exprassign"]],["expr"]]],[11,"from","","",68,[[["exprassignop"]],["expr"]]],[11,"from","","",68,[[["exprfield"]],["expr"]]],[11,"from","","",68,[[["exprindex"]],["expr"]]],[11,"from","","",68,[[["exprrange"]],["expr"]]],[11,"from","","",68,[[["exprpath"]],["expr"]]],[11,"from","","",68,[[["exprreference"]],["expr"]]],[11,"from","","",68,[[["exprbreak"]],["expr"]]],[11,"from","","",68,[[["exprcontinue"]],["expr"]]],[11,"from","","",68,[[["exprreturn"]],["expr"]]],[11,"from","","",68,[[["exprmacro"]],["expr"]]],[11,"from","","",68,[[["exprstruct"]],["expr"]]],[11,"from","","",68,[[["exprrepeat"]],["expr"]]],[11,"from","","",68,[[["exprparen"]],["expr"]]],[11,"from","","",68,[[["exprgroup"]],["expr"]]],[11,"from","","",68,[[["exprtry"]],["expr"]]],[11,"from","","",68,[[["exprasync"]],["expr"]]],[11,"from","","",68,[[["exprtryblock"]],["expr"]]],[11,"from","","",68,[[["expryield"]],["expr"]]],[11,"from","","",68,[[["exprverbatim"]],["expr"]]],[11,"from","","",20,[[["usize"]],["index"]]],[11,"from","","",70,[[["typeparam"]],["genericparam"]]],[11,"from","","",70,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",70,[[["constparam"]],["genericparam"]]],[11,"from","","",29,[[["ident"]],["self"]]],[11,"from","","",72,[[["traitbound"]],["typeparambound"]]],[11,"from","","",72,[[["lifetime"]],["typeparambound"]]],[11,"from","","",73,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",73,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",73,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",76,[[["litstr"]],["lit"]]],[11,"from","","",76,[[["litbytestr"]],["lit"]]],[11,"from","","",76,[[["litbyte"]],["lit"]]],[11,"from","","",76,[[["litchar"]],["lit"]]],[11,"from","","",76,[[["litint"]],["lit"]]],[11,"from","","",76,[[["litfloat"]],["lit"]]],[11,"from","","",76,[[["litbool"]],["lit"]]],[11,"from","","",76,[[["litverbatim"]],["lit"]]],[11,"from","","",79,[[["datastruct"]],["data"]]],[11,"from","","",79,[[["dataenum"]],["data"]]],[11,"from","","",79,[[["dataunion"]],["data"]]],[11,"from","","",84,[[["typeslice"]],["type"]]],[11,"from","","",84,[[["typearray"]],["type"]]],[11,"from","","",84,[[["typeptr"]],["type"]]],[11,"from","","",84,[[["typereference"]],["type"]]],[11,"from","","",84,[[["typebarefn"]],["type"]]],[11,"from","","",84,[[["typenever"]],["type"]]],[11,"from","","",84,[[["typetuple"]],["type"]]],[11,"from","","",84,[[["typepath"]],["type"]]],[11,"from","","",84,[[["typetraitobject"]],["type"]]],[11,"from","","",84,[[["typeimpltrait"]],["type"]]],[11,"from","","",84,[[["typeparen"]],["type"]]],[11,"from","","",84,[[["typegroup"]],["type"]]],[11,"from","","",84,[[["typeinfer"]],["type"]]],[11,"from","","",84,[[["typemacro"]],["type"]]],[11,"from","","",84,[[["typeverbatim"]],["type"]]],[11,"from","","",60,[[["t"]],["self"]]],[11,"from","","",61,[[["t"]],["self"]]],[11,"from","","",208,[[["lexerror"]],["self"]]],[11,"into_iter","syn::punctuated","",201,N],[11,"drop","syn::parse","",207,[[["self"]]]],[11,"len","syn::punctuated","",242,[[["self"]],["usize"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"len","","",244,[[["self"]],["usize"]]],[11,"len","","",245,[[["self"]],["usize"]]],[11,"len","","",246,[[["self"]],["usize"]]],[11,"len","","",247,[[["self"]],["usize"]]],[11,"extend","","",201,[[["self"],["i"]]]],[11,"extend","","",201,[[["self"],["i"]]]],[11,"partial_cmp","syn","",31,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"next","syn::punctuated","",242,[[["self"]],["option"]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"next","","",244,[[["self"]],["option"]]],[11,"next","","",245,[[["self"]],["option"]]],[11,"next","","",246,[[["self"]],["option"]]],[11,"next","","",247,[[["self"]],["option"]]],[11,"default","syn::token","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","syn","",23,[[],["generics"]]],[11,"default","","",21,[[],["boundlifetimes"]]],[11,"default","","",86,[[],["self"]]],[11,"default","syn::punctuated","",201,[[],["self"]]],[11,"eq","syn","",31,[[["self"],["lifetime"]],["bool"]]],[11,"eq","syn::buffer","",198,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",198,[[["self"],["cursor"]],["bool"]]],[11,"clone","syn::token","",87,[[["self"]],["underscore"]]],[11,"clone","","",88,[[["self"]],["abstract"]]],[11,"clone","","",89,[[["self"]],["as"]]],[11,"clone","","",90,[[["self"]],["async"]]],[11,"clone","","",91,[[["self"]],["auto"]]],[11,"clone","","",92,[[["self"]],["become"]]],[11,"clone","","",93,[[["self"]],["box"]]],[11,"clone","","",94,[[["self"]],["break"]]],[11,"clone","","",95,[[["self"]],["const"]]],[11,"clone","","",96,[[["self"]],["continue"]]],[11,"clone","","",97,[[["self"]],["crate"]]],[11,"clone","","",98,[[["self"]],["default"]]],[11,"clone","","",99,[[["self"]],["do"]]],[11,"clone","","",100,[[["self"]],["dyn"]]],[11,"clone","","",101,[[["self"]],["else"]]],[11,"clone","","",102,[[["self"]],["enum"]]],[11,"clone","","",103,[[["self"]],["existential"]]],[11,"clone","","",104,[[["self"]],["extern"]]],[11,"clone","","",105,[[["self"]],["final"]]],[11,"clone","","",106,[[["self"]],["fn"]]],[11,"clone","","",107,[[["self"]],["for"]]],[11,"clone","","",108,[[["self"]],["if"]]],[11,"clone","","",109,[[["self"]],["impl"]]],[11,"clone","","",110,[[["self"]],["in"]]],[11,"clone","","",111,[[["self"]],["let"]]],[11,"clone","","",112,[[["self"]],["loop"]]],[11,"clone","","",113,[[["self"]],["macro"]]],[11,"clone","","",114,[[["self"]],["match"]]],[11,"clone","","",115,[[["self"]],["mod"]]],[11,"clone","","",116,[[["self"]],["move"]]],[11,"clone","","",117,[[["self"]],["mut"]]],[11,"clone","","",118,[[["self"]],["override"]]],[11,"clone","","",119,[[["self"]],["priv"]]],[11,"clone","","",120,[[["self"]],["pub"]]],[11,"clone","","",121,[[["self"]],["ref"]]],[11,"clone","","",122,[[["self"]],["return"]]],[11,"clone","","",123,[[["self"]],["selftype"]]],[11,"clone","","",124,[[["self"]],["selfvalue"]]],[11,"clone","","",125,[[["self"]],["static"]]],[11,"clone","","",126,[[["self"]],["struct"]]],[11,"clone","","",127,[[["self"]],["super"]]],[11,"clone","","",128,[[["self"]],["trait"]]],[11,"clone","","",129,[[["self"]],["try"]]],[11,"clone","","",130,[[["self"]],["type"]]],[11,"clone","","",131,[[["self"]],["typeof"]]],[11,"clone","","",132,[[["self"]],["union"]]],[11,"clone","","",133,[[["self"]],["unsafe"]]],[11,"clone","","",134,[[["self"]],["unsized"]]],[11,"clone","","",135,[[["self"]],["use"]]],[11,"clone","","",136,[[["self"]],["virtual"]]],[11,"clone","","",137,[[["self"]],["where"]]],[11,"clone","","",138,[[["self"]],["while"]]],[11,"clone","","",139,[[["self"]],["yield"]]],[11,"clone","","",140,[[["self"]],["add"]]],[11,"clone","","",141,[[["self"]],["addeq"]]],[11,"clone","","",142,[[["self"]],["and"]]],[11,"clone","","",143,[[["self"]],["andand"]]],[11,"clone","","",144,[[["self"]],["andeq"]]],[11,"clone","","",145,[[["self"]],["at"]]],[11,"clone","","",146,[[["self"]],["bang"]]],[11,"clone","","",147,[[["self"]],["caret"]]],[11,"clone","","",148,[[["self"]],["careteq"]]],[11,"clone","","",149,[[["self"]],["colon"]]],[11,"clone","","",150,[[["self"]],["colon2"]]],[11,"clone","","",151,[[["self"]],["comma"]]],[11,"clone","","",152,[[["self"]],["div"]]],[11,"clone","","",153,[[["self"]],["diveq"]]],[11,"clone","","",154,[[["self"]],["dollar"]]],[11,"clone","","",155,[[["self"]],["dot"]]],[11,"clone","","",156,[[["self"]],["dot2"]]],[11,"clone","","",157,[[["self"]],["dot3"]]],[11,"clone","","",158,[[["self"]],["dotdoteq"]]],[11,"clone","","",159,[[["self"]],["eq"]]],[11,"clone","","",160,[[["self"]],["eqeq"]]],[11,"clone","","",161,[[["self"]],["ge"]]],[11,"clone","","",162,[[["self"]],["gt"]]],[11,"clone","","",163,[[["self"]],["le"]]],[11,"clone","","",164,[[["self"]],["lt"]]],[11,"clone","","",165,[[["self"]],["muleq"]]],[11,"clone","","",166,[[["self"]],["ne"]]],[11,"clone","","",167,[[["self"]],["or"]]],[11,"clone","","",168,[[["self"]],["oreq"]]],[11,"clone","","",169,[[["self"]],["oror"]]],[11,"clone","","",170,[[["self"]],["pound"]]],[11,"clone","","",171,[[["self"]],["question"]]],[11,"clone","","",172,[[["self"]],["rarrow"]]],[11,"clone","","",173,[[["self"]],["larrow"]]],[11,"clone","","",174,[[["self"]],["rem"]]],[11,"clone","","",175,[[["self"]],["remeq"]]],[11,"clone","","",176,[[["self"]],["fatarrow"]]],[11,"clone","","",177,[[["self"]],["semi"]]],[11,"clone","","",178,[[["self"]],["shl"]]],[11,"clone","","",179,[[["self"]],["shleq"]]],[11,"clone","","",180,[[["self"]],["shr"]]],[11,"clone","","",181,[[["self"]],["shreq"]]],[11,"clone","","",182,[[["self"]],["star"]]],[11,"clone","","",183,[[["self"]],["sub"]]],[11,"clone","","",184,[[["self"]],["subeq"]]],[11,"clone","","",185,[[["self"]],["tilde"]]],[11,"clone","","",186,[[["self"]],["brace"]]],[11,"clone","","",187,[[["self"]],["bracket"]]],[11,"clone","","",188,[[["self"]],["paren"]]],[11,"clone","","",189,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",63,[[["self"]],["attrstyle"]]],[11,"clone","","",64,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",65,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",66,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",67,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",68,[[["self"]],["expr"]]],[11,"clone","","",215,[[["self"]],["exprbox"]]],[11,"clone","","",222,[[["self"]],["exprinplace"]]],[11,"clone","","",210,[[["self"]],["exprarray"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",227,[[["self"]],["exprmethodcall"]]],[11,"clone","","",235,[[["self"]],["exprtuple"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",236,[[["self"]],["exprtype"]]],[11,"clone","","",223,[[["self"]],["exprlet"]]],[11,"clone","","",221,[[["self"]],["exprif"]]],[11,"clone","","",238,[[["self"]],["exprwhile"]]],[11,"clone","","",219,[[["self"]],["exprforloop"]]],[11,"clone","","",224,[[["self"]],["exprloop"]]],[11,"clone","","",226,[[["self"]],["exprmatch"]]],[11,"clone","","",217,[[["self"]],["exprclosure"]]],[11,"clone","","",237,[[["self"]],["exprunsafe"]]],[11,"clone","","",214,[[["self"]],["exprblock"]]],[11,"clone","","",211,[[["self"]],["exprassign"]]],[11,"clone","","",212,[[["self"]],["exprassignop"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",228,[[["self"]],["exprrange"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",229,[[["self"]],["exprreference"]]],[11,"clone","","",216,[[["self"]],["exprbreak"]]],[11,"clone","","",218,[[["self"]],["exprcontinue"]]],[11,"clone","","",231,[[["self"]],["exprreturn"]]],[11,"clone","","",225,[[["self"]],["exprmacro"]]],[11,"clone","","",232,[[["self"]],["exprstruct"]]],[11,"clone","","",230,[[["self"]],["exprrepeat"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",220,[[["self"]],["exprgroup"]]],[11,"clone","","",233,[[["self"]],["exprtry"]]],[11,"clone","","",213,[[["self"]],["exprasync"]]],[11,"clone","","",234,[[["self"]],["exprtryblock"]]],[11,"clone","","",239,[[["self"]],["expryield"]]],[11,"clone","","",19,[[["self"]],["exprverbatim"]]],[11,"clone","","",69,[[["self"]],["member"]]],[11,"clone","","",20,[[["self"]],["index"]]],[11,"clone","","",23,[[["self"]],["generics"]]],[11,"clone","","",70,[[["self"]],["genericparam"]]],[11,"clone","","",29,[[["self"]],["typeparam"]]],[11,"clone","","",24,[[["self"]],["lifetimedef"]]],[11,"clone","","",22,[[["self"]],["constparam"]]],[11,"clone","","",240,[[["self"]],["implgenerics"]]],[11,"clone","","",190,[[["self"]],["typegenerics"]]],[11,"clone","","",241,[[["self"]],["turbofish"]]],[11,"clone","","",21,[[["self"]],["boundlifetimes"]]],[11,"clone","","",72,[[["self"]],["typeparambound"]]],[11,"clone","","",28,[[["self"]],["traitbound"]]],[11,"clone","","",71,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",30,[[["self"]],["whereclause"]]],[11,"clone","","",73,[[["self"]],["wherepredicate"]]],[11,"clone","","",27,[[["self"]],["predicatetype"]]],[11,"clone","","",26,[[["self"]],["predicatelifetime"]]],[11,"clone","","",25,[[["self"]],["predicateeq"]]],[11,"clone","","",31,[[["self"]],["lifetime"]]],[11,"clone","","",76,[[["self"]],["lit"]]],[11,"clone","","",191,[[["self"]],["litstr"]]],[11,"clone","","",192,[[["self"]],["litbytestr"]]],[11,"clone","","",193,[[["self"]],["litbyte"]]],[11,"clone","","",194,[[["self"]],["litchar"]]],[11,"clone","","",195,[[["self"]],["litint"]]],[11,"clone","","",196,[[["self"]],["litfloat"]]],[11,"clone","","",32,[[["self"]],["litbool"]]],[11,"clone","","",33,[[["self"]],["litverbatim"]]],[11,"clone","","",77,[[["self"]],["strstyle"]]],[11,"clone","","",75,[[["self"]],["intsuffix"]]],[11,"clone","","",74,[[["self"]],["floatsuffix"]]],[11,"clone","","",34,[[["self"]],["macro"]]],[11,"clone","","",78,[[["self"]],["macrodelimiter"]]],[11,"clone","","",38,[[["self"]],["deriveinput"]]],[11,"clone","","",79,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datastruct"]]],[11,"clone","","",35,[[["self"]],["dataenum"]]],[11,"clone","","",37,[[["self"]],["dataunion"]]],[11,"clone","","",80,[[["self"]],["binop"]]],[11,"clone","","",81,[[["self"]],["unop"]]],[11,"clone","","",84,[[["self"]],["type"]]],[11,"clone","","",52,[[["self"]],["typeslice"]]],[11,"clone","","",41,[[["self"]],["typearray"]]],[11,"clone","","",50,[[["self"]],["typeptr"]]],[11,"clone","","",51,[[["self"]],["typereference"]]],[11,"clone","","",42,[[["self"]],["typebarefn"]]],[11,"clone","","",47,[[["self"]],["typenever"]]],[11,"clone","","",54,[[["self"]],["typetuple"]]],[11,"clone","","",49,[[["self"]],["typepath"]]],[11,"clone","","",53,[[["self"]],["typetraitobject"]]],[11,"clone","","",44,[[["self"]],["typeimpltrait"]]],[11,"clone","","",48,[[["self"]],["typeparen"]]],[11,"clone","","",43,[[["self"]],["typegroup"]]],[11,"clone","","",45,[[["self"]],["typeinfer"]]],[11,"clone","","",46,[[["self"]],["typemacro"]]],[11,"clone","","",55,[[["self"]],["typeverbatim"]]],[11,"clone","","",39,[[["self"]],["abi"]]],[11,"clone","","",40,[[["self"]],["barefnarg"]]],[11,"clone","","",82,[[["self"]],["barefnargname"]]],[11,"clone","","",83,[[["self"]],["returntype"]]],[11,"clone","","",60,[[["self"]],["path"]]],[11,"clone","","",61,[[["self"]],["pathsegment"]]],[11,"clone","","",86,[[["self"]],["patharguments"]]],[11,"clone","","",85,[[["self"]],["genericargument"]]],[11,"clone","","",56,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",57,[[["self"]],["binding"]]],[11,"clone","","",58,[[["self"]],["constraint"]]],[11,"clone","","",59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",62,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",198,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",201,[[["self"]],["punctuated"]]],[11,"clone","syn::parse","",206,[[["self"]],["stepcursor"]]],[11,"clone","syn","",208,[[["self"]],["self"]]],[11,"cmp","","",31,[[["self"],["lifetime"]],["ordering"]]],[11,"fmt","syn::parse","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",208,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",208,[[["self"],["formatter"]],["result"]]],[11,"deref","syn::parse","",206,N],[11,"hash","syn","",31,[[["self"],["h"]]]],[11,"index","syn::punctuated","",201,N],[11,"index_mut","","",201,N],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"description","syn","",208,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",130,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",131,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",132,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",157,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",179,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",180,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",182,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",183,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",184,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",240,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",241,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",192,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",196,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn::punctuated","",201,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",200,[[["self"],["tokenstream"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",209,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",209,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",209,N],[11,"visit_abi","syn::visit","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",248,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",248,[[["self"]],["error"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid…",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
